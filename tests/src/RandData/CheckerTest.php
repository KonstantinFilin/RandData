<?php

namespace RandData;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-09 at 21:59:39.
 */
class CheckerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Checker
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Checker;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers RandData\Checker::time
     */
    public function testTime() {
        $value = "12:34";
        $actual = Checker::time($value, "fld1");
        $this->assertEquals($value, $actual);
        $value2 = "12:34:56";
        $actual2 = Checker::time($value2, "fld2");
        $this->assertEquals($value2, $actual2);
    }

    /**
     * @covers RandData\Checker::time
     * @expectedException \InvalidArgumentException
     * @expectedExceptionMessage Wrong time value [abc] in the attribute [fld1]
     */
    public function testTimeException() {
        $value = "abc";
        $actual = Checker::time($value, "fld1");
        $this->assertEquals($value, $actual);
    }

    /**
     * @covers RandData\Checker::int
     */
    public function testInt() {
        $value = "123";
        $actual = Checker::int($value, 100, 200, "fld1");
        $this->assertEquals($value, $actual);
    }


    /**
     * @covers RandData\Checker::int
     * @expectedException \InvalidArgumentException
     * @expectedExceptionMessage Wrong argument fld1 with value 123: must be integer from 200 to 300
     */
    public function testIntMinException() {
        $value = "123";
        $actual = Checker::int($value, 200, 300, "fld1");
        $this->assertEquals($value, $actual);
    }

}
