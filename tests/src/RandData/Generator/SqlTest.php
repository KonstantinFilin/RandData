<?php

namespace RandData\Generator;

class SqlImplementation extends Sql
{
    public function getHeaders() {
        return [
            "header1",
            "Field 2",
            "Something else"
        ];
    }

    public function getDataSets() 
    {
        return [
            new \RandData\Set\Boolean("m", "f"),
            new \RandData\Set\Integer(6, 9),
            new \RandData\Set\StringList([ "ddd", "eee", "fff", "ggg" ])
        ];
    }
}

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-06-05 at 00:43:56.
 */
class SqlTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Sql
     */
    protected $object;
    protected $tableName;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->tableName = "tbl1";
        $tuple = new \RandData\Tuple();
        $this->object = new SqlImplementation($tuple, $this->tableName);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    /**
     * @covers RandData\Generator\Sql::run
     */
    public function testRun()
    {
        $amount = 4;
        $this->object->setAmount($amount);
        $result = $this->object->run();

        $this->assertNotEmpty($result);
        $this->assertCount($amount, $result);
        
        $fields = "Sex,Level,Exit";
        $values = "'[mf]','[6-9]','(ddd)|(eee)|(fff)|(ggg)'";
        
        $pattern = "/^INSERT INTO `" . $this->tableName . "` \(" . $fields . "\) VALUES \(" . $values . "\);/$";
        
        foreach ($result as $row) {
            
        }
    }
}
