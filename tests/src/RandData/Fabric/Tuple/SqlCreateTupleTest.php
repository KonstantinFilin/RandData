<?php

namespace RandData\Fabric\Tuple;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-24 at 08:44:44.
 */
class SqlCreateTupleTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var SqlCreateTuple
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new SqlCreateTuple($this->getSql());
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::getDataSets
     */
    public function testGetDataSets() {
        $expected = [
            "id" => "counter",
            "operator_id" => "integer:min=0;max=65535",
            "manager_id" => "integer:min=-32768;max=32767",
            "phone" => "string:length_min=1;length_max=100",
            "name" => "string:length_min=1;length_max=255",
            "building" => "string:length_min=1;length_max=10",
            "yesno" => "boolean:valTrue=1;valFalse=0",
            "amount" => "integer:min=0;max=255",
            "t" => "time",
            "sum" => "integer:min=0;max=16777215",
            "sum_ui" => "integer:min=0;max=2147483647",
            "sum_si" => "integer:min=-1073741823;max=1073741823",
            "sum_ubi" => "integer:min=0;max=2147483647",
            "sum_sbi" => "integer:min=-1073741823;max=1073741823",
            "meeting_start" => "time",
            "added" => "datetime:date_min=1900-01-01;date_max=2099-12-31",
            "added_dt" => "date:min=1900-01-01;max=2099-12-31",
            "status" => "string_list:values=active,cancelled,returned,refused,closed",
            "mes_res" => "string:length_min=1;length_max=65536",
            "repair_set_price" => "integer:min=-32768;max=32767",
            "sum_repair2" => "integer:min=-8388608;max=8388607",
            "report_day" => "boolean:valTrue=1;valFalse=0",
            "sum1_withwrawed" => "integer:min=-128;max=127",
            "salary" => "decimal:min=-999;max=999;minFractionDigits=0;maxFractionDigits=2",
            "salary2" => "decimal:min=-9999;max=9999;minFractionDigits=0;maxFractionDigits=0",
            "salary3" => "decimal:min=-9999999999;max=9999999999;minFractionDigits=0;maxFractionDigits=0",
            "till" => "integer:min=1901;max=2155",
            "till2" => "integer:min=0;max=99",
            "till3" => "integer:min=1901;max=2155"
        ];
        
        $actual = $this->object->getDataSets();
        $this->assertEquals($expected, $actual);
    }
    
    /**
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::__construct
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::getFieldsAsSql
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::getNullProbability
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::parseSqlCanBeNull
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::parseSqlFieldDefinition
     * @covers RandData\Fabric\Tuple\SqlCreateParserFabric::runParser
     */
    public function testGetFieldsAsSql() {
        $expected = [
            "`id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT",
            "`operator_id` smallint(5) unsigned DEFAULT NULL",
            "`manager_id` smallint(5) DEFAULT NULL",
            "`phone` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL",
            "`name` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NOT NULL",
            "`building` varchar(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL",
            "`yesno` tinyint(1) unsigned DEFAULT NULL",
            "`amount` tinyint(3) unsigned DEFAULT NULL",
            "`t` time DEFAULT NULL",
            "`sum` mediumint(8) unsigned DEFAULT NULL",
            "`sum_ui` int(8) unsigned DEFAULT NULL",
            "`sum_si` int(8) DEFAULT NULL",
            "`sum_ubi` bigint(8) unsigned DEFAULT NULL",
            "`sum_sbi` bigint(8) DEFAULT NULL",
            "`meeting_start` time DEFAULT NULL",
            "`added` datetime NOT NULL",
            "`added_dt` date DEFAULT NULL",
            "`status` enum('active','cancelled','returned','refused','closed') COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'active'",
            "`mes_res` text COLLATE utf8mb4_unicode_ci",
            "`repair_set_price` smallint(5) DEFAULT NULL",
            "`sum_repair2` mediumint(8) DEFAULT NULL",
            "`report_day` tinyint(1) unsigned NOT NULL DEFAULT '0'",
            "`sum1_withwrawed` tinyint(1) NOT NULL DEFAULT '0'",
            "`salary` decimal(5,2) NULL DEFAULT '0'",
            "`salary2` decimal(4) NULL DEFAULT '0'",
            "`salary3` decimal NULL DEFAULT '0'",
            "`till` year(4) NULL DEFAULT '0'",
            "`till2` year(2) NULL DEFAULT '0'",
            "`till3` year NULL DEFAULT '0'",
        ];

        $this->assertEquals($expected, $this->object->getFieldsAsSql($this->getSql()));
    }

    /**
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::getDataSetsDefinitionList
     */
    public function testGetDataSetsDefinitionList() {
        $lines = $this->object->getDataSetsDefinitionList($this->getSql());
        $this->assertTrue(is_array($lines));
        $this->assertNotEmpty($lines);
        $this->assertEquals("counter", $lines["id"]);
        $this->assertEquals("integer:min=0;max=65535", $lines["operator_id"]);
        $this->assertEquals("integer:min=-32768;max=32767", $lines["manager_id"]);
        $this->assertEquals("string:length_min=1;length_max=100", $lines["phone"]);
        $this->assertEquals("string:length_min=1;length_max=255", $lines["name"]);
        $this->assertEquals("string:length_min=1;length_max=10", $lines["building"]);
        $this->assertEquals("boolean:valTrue=1;valFalse=0", $lines["yesno"]);
        $this->assertEquals("integer:min=0;max=255", $lines["amount"]);
        $this->assertEquals("time", $lines["t"]);
        $this->assertEquals("integer:min=0;max=16777215", $lines["sum"]);
        $this->assertEquals("integer:min=0;max=" . mt_getrandmax(), $lines["sum_ui"]);
        $this->assertEquals("integer:min=" . (floor((mt_getrandmax() - 1) / 2) * -1) . ";max=" . floor(mt_getrandmax() / 2), $lines["sum_si"]);
        $this->assertEquals("integer:min=0;max=" . mt_getrandmax(), $lines["sum_ubi"]);
        $this->assertEquals("integer:min=" . (floor((mt_getrandmax() - 1) / 2) * -1) . ";max=" . floor(mt_getrandmax() / 2), $lines["sum_sbi"]);
        $this->assertEquals("time", $lines["meeting_start"]);
        $this->assertEquals("datetime:date_min=1900-01-01;date_max=2099-12-31", $lines["added"]);
        $this->assertEquals("date:min=1900-01-01;max=2099-12-31", $lines["added_dt"]);
        $this->assertEquals("string_list:values=active,cancelled,returned,refused,closed", $lines["status"]);
        $this->assertEquals("string:length_min=1;length_max=65536", $lines["mes_res"]);
        $this->assertEquals("integer:min=-32768;max=32767", $lines["repair_set_price"]);
        $this->assertEquals("integer:min=-8388608;max=8388607", $lines["sum_repair2"]);
        $this->assertEquals("boolean:valTrue=1;valFalse=0", $lines["report_day"]);
        $this->assertEquals("integer:min=-128;max=127", $lines["sum1_withwrawed"]);
        $this->assertEquals("decimal:min=-999;max=999;minFractionDigits=0;maxFractionDigits=2", $lines["salary"]);
        $this->assertEquals("decimal:min=-9999;max=9999;minFractionDigits=0;maxFractionDigits=0", $lines["salary2"]);
        $this->assertEquals("decimal:min=-9999999999;max=9999999999;minFractionDigits=0;maxFractionDigits=0", $lines["salary3"]);
        $this->assertEquals("integer:min=1901;max=2155", $lines["till"]);
        $this->assertEquals("integer:min=0;max=99", $lines["till2"]);
        $this->assertEquals("integer:min=1901;max=2155", $lines["till3"]);
    }

    /**
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::parseSqlFieldDefinition
     * @expectedException \InvalidArgumentException
     * @expectedExceptionMessage Wrong sql field definition: abc (must be field name enclosed with ``)
     */
    public function testParseSqlFieldDefinitionException1()
    {
        $sql = "CREATE TABLE `tbl1` (abc) ";
        $this->object->getDataSetsDefinitionList($sql);
    }

    /**
     * @covers RandData\Fabric\Tuple\SqlCreateTuple::parseSqlFieldDefinition
     * @expectedException \InvalidArgumentException
     * @expectedExceptionMessage Can't parse the string: `fld1` wrong definition
     */
    public function testParseSqlFieldDefinitionException2()
    {
        $sql = "CREATE TABLE `tbl1` (`fld1` wrong definition) ";
        $this->object->getDataSetsDefinitionList($sql);
    }
    
    private function getSql() {
        return "CREATE TABLE `claim` (
            `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
            `operator_id` smallint(5) unsigned DEFAULT NULL,
            `manager_id` smallint(5) DEFAULT NULL,
            `phone` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
            `name` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NOT NULL,
            `building` varchar(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
            `yesno` tinyint(1) unsigned DEFAULT NULL,
            `amount` tinyint(3) unsigned DEFAULT NULL,
            `t` time DEFAULT NULL,
            `sum` mediumint(8) unsigned DEFAULT NULL,
            `sum_ui` int(8) unsigned DEFAULT NULL,
            `sum_si` int(8) DEFAULT NULL,
            `sum_ubi` bigint(8) unsigned DEFAULT NULL,
            `sum_sbi` bigint(8) DEFAULT NULL,
            `meeting_start` time DEFAULT NULL,
            `added` datetime NOT NULL,
            `added_dt` date DEFAULT NULL,
            `status` enum('active','cancelled','returned','refused','closed') COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'active',
            `mes_res` text COLLATE utf8mb4_unicode_ci,
            `repair_set_price` smallint(5) DEFAULT NULL,
            `sum_repair2` mediumint(8) DEFAULT NULL,
            `report_day` tinyint(1) unsigned NOT NULL DEFAULT '0',
            `sum1_withwrawed` tinyint(1) NOT NULL DEFAULT '0',
            `salary` decimal(5,2) NULL DEFAULT '0',
            `salary2` decimal(4) NULL DEFAULT '0',
            `salary3` decimal NULL DEFAULT '0',
            `till` year(4) NULL DEFAULT '0',
            `till2` year(2) NULL DEFAULT '0',
            `till3` year NULL DEFAULT '0',
            PRIMARY KEY (`id`),
            UNIQUE KEY `name` (`name`),
            KEY `added` (`added`),
            KEY `cancelled_status` (`cancelled_status`),
            KEY `city_id` (`city_id`),
            KEY `meeting_finish` (`meeting_finish`),
            KEY `added_dt` (`added_dt`),
            KEY `added_dt_2` (`added_dt`,`cancelled_status`),
            KEY `operator_id` (`operator_id`,`cancelled_status`,`added_dt`),
            KEY `operator_id_2` (`operator_id`,`cancelled_status`,`added_dt`,`meeting_finish`),
            KEY `added_dt_3` (`added_dt`,`city_id`,`cancelled_status`)
           ) ENGINE=InnoDB AUTO_INCREMENT=390766 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci";
    }
}
