<?php

namespace RandData\Fabric\Tuple\SqlCreateParser;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-24 at 11:26:00.
 */
class DtTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Dt
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Dt;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers RandData\Fabric\Tuple\SqlCreateParser\Dt::parse
     */
    public function testParse() {
        $fieldDefinition = "`added` datetime NOT NULL";
        $this->assertEquals("datetime:date_min=1900-01-01;date_max=2099-12-31", $this->object->parse($fieldDefinition));
        $fieldDefinition2 = "`added` date NOT NULL";
        $this->assertEquals("date:min=1900-01-01;max=2099-12-31", $this->object->parse($fieldDefinition2));
        $fieldDefinition3 = "`t` time NOT NULL";
        $this->assertEquals("time", $this->object->parse($fieldDefinition3));
        $fieldDefinition4 = "`y` year(4) NOT NULL";
        $this->assertEquals("integer:min=1901;max=2155", $this->object->parse($fieldDefinition4));
        $fieldDefinition5 = "`y` year(2) NOT NULL";
        $this->assertEquals("integer:min=0;max=99", $this->object->parse($fieldDefinition5));
        $fieldDefinition6 = "`y` year NOT NULL";
        $this->assertEquals("integer:min=1901;max=2155", $this->object->parse($fieldDefinition6));

        $this->assertNull($this->object->parse("asdgasdg"));
    }

}
