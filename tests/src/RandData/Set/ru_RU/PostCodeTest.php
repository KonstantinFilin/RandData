<?php

namespace RandData\Set\ru_RU;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-06-25 at 23:55:12.
 */
class PostalCodeTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var PostalCode
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Postcode;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers RandData\Set\ru_RU\Postcode::__construct
     * @covers RandData\Set\ru_RU\Postcode::get
     * @covers RandData\Set\ru_RU\Postcode::getCityCodeList
     * @covers RandData\Set\ru_RU\Postcode::getRussiaCityCodeList
     */
    public function testGet() {
        $res = $this->object->get();
        $this->assertNotEmpty($res);
        $this->assertTrue(strlen($res) == 6);
        $this->assertRegExp("/^[\d]{6}$/", $res);
    }
    
    /**
     * 
     */
    public function testInit()
    {
        $obj = new Postcode();
        $hasDiffRegions = false;
        $testRegions = [ 111, 112, 113 ];
        
        for ($i = 1; $i <= 10; $i++) {
            $res = $obj->get();
            $reg = substr($res, 0, 3);

            if (!in_array($reg, $testRegions)) {
                $hasDiffRegions = true;
            }
        }
        
        $this->assertTrue($hasDiffRegions);
        
        $obj->init([ "city_code_list" => $testRegions ]);
        $hasDiffRegions2 = false;
        
        for ($i = 1; $i <= 10; $i++) {
            $res = $obj->get();
            $reg = substr($res, 0, 3);

            if (!in_array($reg, $testRegions)) {
                $hasDiffRegions2 = true;
            }
        }
        
        $this->assertFalse($hasDiffRegions2);
    }
}
