<?php

namespace RandData\Set\ru_RU;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-10 at 01:53:41.
 */
class AddressTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Address
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Address;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers RandData\Set\ru_RU\Address::get
     */
    public function testGet() {
        $pattern = $this->getPatternLong();
        
        for ($i = 1; $i <= 10; $i++) {
            $this->assertRegExp($pattern, $this->object->get());
        }
    }

    /**
     * @covers RandData\Set\ru_RU\Address::init
     */
    public function testInit() {
        $obj = new Address();
        $obj->init([ "show_flat" => 0 ]);
        $pattern = $this->getPatternShort();
        
        for ($i = 1; $i <= 10; $i++) {
            $this->assertRegExp($pattern, $obj->get());
        }

        $obj->init([ "show_flat" => 1 ]);
        $pattern2 = $this->getPatternLong();
        
        for ($i = 1; $i <= 10; $i++) {
            $this->assertRegExp($pattern2, $obj->get());
        }
    }
    
    private function getPatternLong()
    {
        return "/^([АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя\w\s\.-]+), д. [\d]{1,3}, кв. [\d]{1,3}$/";
    }

    private function getPatternShort()
    {
        return "/^([АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя\w\s\.-]+), д. [\d]{1,2}$/";
    }
}
