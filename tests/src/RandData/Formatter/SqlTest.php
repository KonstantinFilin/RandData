<?php

namespace RandData\Formatter;

class GeneratorImplementationSql extends \RandData\Generator
{
    public function getDataSets() {
        return [
            "f1" => "integer:min=1;max=100",
            "f2" => "integer:min=1;max=100",
            "f3" => "integer:min=1;max=100",
            "f4" => "integer:min=1;max=100"
        ];
    }
}

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-06-13 at 21:20:10.
 */
class SqlTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Sql
     */
    protected $formatter;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $generator = new GeneratorImplementationSql();
        $this->formatter = new Sql($generator, "table1");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers RandData\Formatter\Sql::build
     */
    public function testBuild() {
        $data = [ 
            [ "val11", "val12", "val13" ], 
            [ "val21", "val22", "val23" ], 
            [ "val31", "val32", "val33" ], 
        ];
        
        $generator = $this->createMock(GeneratorImplementationSql::class);
        $generator->method("run")->willReturn($data);
        $generator->method("getHeaders")->willReturn([ "fld1", "fld2", "fld3" ]);
        $formatter = new \RandData\Formatter\Sql($generator, "tblName");
        
        $expected = "INSERT INTO `tblName` (`fld1`,`fld2`,`fld3`) VALUES ('val11','val12','val13');
INSERT INTO `tblName` (`fld1`,`fld2`,`fld3`) VALUES ('val21','val22','val23');
INSERT INTO `tblName` (`fld1`,`fld2`,`fld3`) VALUES ('val31','val32','val33')";
        $this->assertEquals($expected, $formatter->build());
        
        $formatter->setIncrementField("id");
        $expected2 = "INSERT INTO `tblName` (`id`,`fld1`,`fld2`,`fld3`) VALUES (1,'val11','val12','val13');
INSERT INTO `tblName` (`id`,`fld1`,`fld2`,`fld3`) VALUES (2,'val21','val22','val23');
INSERT INTO `tblName` (`id`,`fld1`,`fld2`,`fld3`) VALUES (3,'val31','val32','val33')";
        $this->assertEquals($expected2, $formatter->build());
        
        $formatter->setIncrementField("id123");
        $formatter->setIncrementStart(4);
        $expected3 = "INSERT INTO `tblName` (`id123`,`fld1`,`fld2`,`fld3`) VALUES (4,'val11','val12','val13');
INSERT INTO `tblName` (`id123`,`fld1`,`fld2`,`fld3`) VALUES (5,'val21','val22','val23');
INSERT INTO `tblName` (`id123`,`fld1`,`fld2`,`fld3`) VALUES (6,'val31','val32','val33')";
        $this->assertEquals($expected3, $formatter->build());
    }
}
